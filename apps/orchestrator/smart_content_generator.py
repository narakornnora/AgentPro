"""
üé® Smart Content Generator - ‡∏ï‡∏±‡∏ß‡∏ä‡πà‡∏ß‡∏¢ AI ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
"""
import os
import json
import asyncio
from pathlib import Path

class SmartContentGenerator:
    def __init__(self):
        self.image_descriptions = {
            # Coffee Shop Images
            "cafe-drink-menu": "‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡πÅ‡∏ü ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡πÅ‡∏ü‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡∏ô‡∏¥‡∏î",
            "espresso-bar": "‡∏ö‡∏≤‡∏£‡πå‡πÄ‡∏≠‡∏™‡πÄ‡∏õ‡∏£‡∏™‡πÇ‡∏ã‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û",
            "coffee-latte-art": "‡∏•‡∏≤‡πÄ‡∏ï‡πâ‡∏≠‡∏≤‡∏£‡πå‡∏ï‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏° ‡πÅ‡∏™‡∏î‡∏á‡∏ù‡∏µ‡∏°‡∏∑‡∏≠‡∏ö‡∏≤‡∏£‡∏¥‡∏™‡∏ï‡πâ‡∏≤",
            "coffee-beans": "‡πÄ‡∏°‡∏•‡πá‡∏î‡∏Å‡∏≤‡πÅ‡∏ü‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á ‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏´‡∏≠‡∏°‡∏Å‡∏£‡∏∏‡πà‡∏ô",
            "graffiti-wall": "‡∏ú‡∏ô‡∏±‡∏á‡∏®‡∏¥‡∏•‡∏õ‡∏∞‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡πÅ‡∏ü ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡πÅ‡∏õ‡∏•‡∏Å‡πÉ‡∏´‡∏°‡πà",
            
            # Restaurant Images
            "dish-ceramic-plate": "‡∏à‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏¥‡∏ä‡∏•‡∏¥‡∏ô ‡∏à‡∏±‡∏î‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏®‡∏¥‡∏•‡∏õ‡∏∞",
            "brown-themed-bar": "‡∏ö‡∏≤‡∏£‡πå‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏¥‡∏Å ‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô",
            "wooden-tables-chairs": "‡πÇ‡∏ï‡πä‡∏∞‡πÑ‡∏°‡πâ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏£‡πà‡∏ß‡∏°‡∏™‡∏°‡∏±‡∏¢",
            "chef-plating": "‡πÄ‡∏ä‡∏ü‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏à‡∏±‡∏î‡∏à‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏ì‡∏µ‡∏ï",
            
            # Business Images  
            "jigsaw-puzzle": "‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡∏° ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô",
            "sea-waves": "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à",
            "mountain-range": "‡∏ß‡∏¥‡∏™‡∏±‡∏¢‡∏ó‡∏±‡∏®‡∏ô‡πå‡∏£‡∏∞‡∏¢‡∏∞‡πÑ‡∏Å‡∏• ‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÑ‡∏Å‡∏•",
            "port-cranes": "‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô ‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÅ‡∏•‡∏∞‡πÇ‡∏•‡∏à‡∏¥‡∏™‡∏ï‡∏¥‡∏Å‡∏™‡πå",
            
            # Fashion Images
            "white-black-sneakers": "‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏ú‡πâ‡∏≤‡πÉ‡∏ö‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏°‡∏¥‡∏ô‡∏¥‡∏°‡∏≠‡∏•",
            "afro-hair-woman": "‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á‡∏™‡∏°‡∏±‡∏¢‡πÉ‡∏´‡∏°‡πà ‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á",
            "stylish-woman": "‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏™‡πÑ‡∏ï‡∏•‡πå",
            "red-stilettos": "‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏™‡πâ‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏µ‡πÅ‡∏î‡∏á ‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à"
        }
        
        self.content_templates = {
            "hero_text": {
                "coffee": [
                    "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡πÇ‡∏•‡∏Å‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡πÅ‡∏ü‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°",
                    "‡∏Å‡∏≤‡πÅ‡∏ü‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á ‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏î‡∏µ ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡πÉ‡∏à",
                    "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡πÅ‡∏ü‡∏™‡∏∏‡∏î‡∏û‡∏¥‡πÄ‡∏®‡∏©"
                ],
                "restaurant": [
                    "‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÇ‡∏•‡∏Å",
                    "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏•‡∏¥‡∏®‡∏£‡∏™ ‡∏à‡∏≤‡∏Å‡πÄ‡∏ä‡∏ü‡∏ä‡∏±‡πâ‡∏ô‡∏ô‡∏≥",
                    "Fine Dining Experience ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÉ‡∏Ñ‡∏£"
                ],
                "business": [
                    "‡∏û‡∏≤‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï",
                    "‡πÇ‡∏ã‡∏•‡∏π‡∏ä‡∏±‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏£‡∏±‡∏ô",
                    "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ"
                ],
                "fashion": [
                    "‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏∞‡∏ó‡πâ‡∏≠‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡∏†‡∏≤‡∏û‡∏Ñ‡∏∏‡∏ì",
                    "‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏ï‡∏Å‡∏¢‡∏∏‡∏Ñ",
                    "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏á‡∏ï‡∏±‡∏ß"
                ]
            },
            "feature_descriptions": {
                "coffee": {
                    "quality": "‡πÄ‡∏°‡∏•‡πá‡∏î‡∏Å‡∏≤‡πÅ‡∏ü‡∏Ñ‡∏±‡∏î‡∏™‡∏£‡∏£‡∏à‡∏≤‡∏Å‡πÅ‡∏´‡∏•‡πà‡∏á‡∏õ‡∏•‡∏π‡∏Å‡∏ä‡∏±‡πâ‡∏ô‡∏ô‡∏≥ ‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô",
                    "atmosphere": "‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏û‡∏ö‡∏õ‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô",
                    "service": "‡∏ö‡∏≤‡∏£‡∏¥‡∏™‡∏ï‡πâ‡∏≤‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏ç ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°",
                    "location": "‡∏ó‡∏≥‡πÄ‡∏•‡∏™‡∏∞‡∏î‡∏ß‡∏Å ‡∏à‡∏≠‡∏î‡∏£‡∏ñ‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏Ç‡∏ô‡∏™‡πà‡∏á"
                },
                "restaurant": {
                    "cuisine": "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ô‡∏≤‡∏ô‡∏≤‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏õ‡∏£‡∏∏‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á",
                    "ambiance": "‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á‡∏´‡∏£‡∏π‡∏´‡∏£‡∏≤ ‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡πÇ‡∏£‡πÅ‡∏°‡∏ô‡∏ï‡∏¥‡∏Å",
                    "chef": "‡πÄ‡∏ä‡∏ü‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÇ‡∏•‡∏Å",
                    "service": "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏° ‡πÉ‡∏™‡πà‡πÉ‡∏à‡∏ó‡∏∏‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î"
                },
                "business": {
                    "innovation": "‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏•‡πâ‡∏≥‡∏™‡∏°‡∏±‡∏¢ ‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡πÇ‡∏à‡∏ó‡∏¢‡πå",
                    "efficiency": "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û ‡∏•‡∏î‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏•‡∏Å‡∏≥‡πÑ‡∏£",
                    "support": "‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û ‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô 24/7",
                    "growth": "‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏ó‡∏µ‡πà‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô ‡∏ß‡∏¥‡∏™‡∏±‡∏¢‡∏ó‡∏±‡∏®‡∏ô‡πå‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß"
                },
                "fashion": {
                    "style": "‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏ï‡∏Å‡∏¢‡∏∏‡∏Ñ",
                    "quality": "‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏ô‡∏ó‡∏≤‡∏ô",
                    "variety": "‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏™‡πÑ‡∏ï‡∏•‡πå ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏ó‡∏∏‡∏Å‡πÇ‡∏≠‡∏Å‡∏≤‡∏™",
                    "confidence": "‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à ‡∏™‡∏∞‡∏ó‡πâ‡∏≠‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡∏†‡∏≤‡∏û"
                }
            }
        }
    
    def generate_image_alt_text(self, image_filename):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á alt text ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û"""
        filename = image_filename.lower()
        
        # ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á alt text
        keywords = []
        
        if "coffee" in filename or "cafe" in filename:
            keywords.append("‡∏Å‡∏≤‡πÅ‡∏ü")
        if "latte" in filename:
            keywords.append("‡∏•‡∏≤‡πÄ‡∏ï‡πâ")
        if "espresso" in filename:
            keywords.append("‡πÄ‡∏≠‡∏™‡πÄ‡∏õ‡∏£‡∏™‡πÇ‡∏ã‡πà")
        if "menu" in filename:
            keywords.append("‡πÄ‡∏°‡∏ô‡∏π")
        if "dish" in filename or "plate" in filename:
            keywords.append("‡∏≠‡∏≤‡∏´‡∏≤‡∏£")
        if "chef" in filename:
            keywords.append("‡πÄ‡∏ä‡∏ü")
        if "woman" in filename or "fashion" in filename:
            keywords.append("‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô")
        if "business" in filename:
            keywords.append("‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à")
            
        if keywords:
            return f"‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û{' '.join(keywords)} - ‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û"
        else:
            return f"‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á - {image_filename.split('.')[0]}"
    
    def generate_content_for_image(self, image_filename, project_type):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û"""
        alt_text = self.generate_image_alt_text(image_filename)
        
        content = {
            "filename": image_filename,
            "alt_text": alt_text,
            "suggested_usage": [],
            "related_content": []
        }
        
        # ‡πÄ‡∏™‡∏ô‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå
        if project_type in ["coffee", "cafe"]:
            if "menu" in image_filename.lower():
                content["suggested_usage"] = ["‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π", "‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå", "‡πÅ‡∏Å‡∏•‡πÄ‡∏•‡∏≠‡∏£‡∏µ‡πà"]
                content["related_content"] = [
                    "‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢",
                    "‡∏Å‡∏≤‡πÅ‡∏ü‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°",
                    "‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤"
                ]
            elif "coffee" in image_filename.lower():
                content["suggested_usage"] = ["‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å Hero", "‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤", "‡πÅ‡∏Å‡∏•‡πÄ‡∏•‡∏≠‡∏£‡∏µ‡πà"]
                content["related_content"] = [
                    "‡∏Å‡∏≤‡πÅ‡∏ü‡∏™‡∏î ‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô",
                    "‡∏ö‡∏≤‡∏£‡∏¥‡∏™‡∏ï‡πâ‡∏≤‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û",
                    "‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô"
                ]
                
        elif project_type == "restaurant":
            if "dish" in image_filename.lower():
                content["suggested_usage"] = ["‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£", "‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å", "‡πÅ‡∏Å‡∏•‡πÄ‡∏•‡∏≠‡∏£‡∏µ‡πà"]
                content["related_content"] = [
                    "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ô‡∏≤‡∏ô‡∏≤‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°",
                    "‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏™‡∏î ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û",
                    "‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏à‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°"
                ]
            elif "chef" in image_filename.lower():
                content["suggested_usage"] = ["‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤", "‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô", "‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å"]
                content["related_content"] = [
                    "‡πÄ‡∏ä‡∏ü‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏™‡∏π‡∏á",
                    "‡∏ù‡∏µ‡∏°‡∏∑‡∏≠‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏¥‡∏ä‡∏•‡∏¥‡∏ô",
                    "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏™‡πà‡πÉ‡∏à‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î"
                ]
                
        return content
    
    async def enhance_website_content(self, site_path):
        """‡πÄ‡∏™‡∏£‡∏¥‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏î‡πâ‡∏ß‡∏¢ AI"""
        print(f"üé® ‡πÄ‡∏™‡∏£‡∏¥‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ {os.path.basename(site_path)}...")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
        site_name = os.path.basename(site_path).lower()
        if "coffee" in site_name:
            project_type = "coffee"
        elif "restaurant" in site_name:
            project_type = "restaurant"
        elif "business" in site_name:
            project_type = "business"
        elif "fashion" in site_name:
            project_type = "fashion"
        else:
            project_type = "general"
        
        # ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏°‡∏µ
        assets_path = os.path.join(site_path, "assets", "images")
        if not os.path.exists(assets_path):
            print(f"  ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå assets/images")
            return False
            
        images = [f for f in os.listdir(assets_path) if f.lower().endswith(('.jpg', '.png', '.jpeg'))]
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏π‡∏õ
        content_data = []
        for img in images:
            content = self.generate_content_for_image(img, project_type)
            content_data.append(content)
            
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
        content_file = os.path.join(site_path, "content_suggestions.json")
        with open(content_file, 'w', encoding='utf-8') as f:
            json.dump({
                "project_type": project_type,
                "total_images": len(images),
                "content_data": content_data,
                "hero_suggestions": self.content_templates["hero_text"].get(project_type, []),
                "feature_suggestions": self.content_templates["feature_descriptions"].get(project_type, {})
            }, f, ensure_ascii=False, indent=2)
            
        print(f"  ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤: {len(images)} ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û")
        print(f"  üìù ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: content_suggestions.json")
        
        return True
    
    async def enhance_all_websites(self):
        """‡πÄ‡∏™‡∏£‡∏¥‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏∏‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå"""
        workspace_path = "C:/agent/workspace"
        print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞...\n")
        
        enhanced_count = 0
        for item in os.listdir(workspace_path):
            site_path = os.path.join(workspace_path, item)
            
            if os.path.isdir(site_path) and not item.startswith('.'):
                has_html = any(f.endswith('.html') for f in os.listdir(site_path))
                if has_html:
                    success = await self.enhance_website_content(site_path)
                    if success:
                        enhanced_count += 1
                    print()
        
        print(f"üéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏£‡∏¥‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤: {enhanced_count} ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå")
        return enhanced_count

if __name__ == "__main__":
    generator = SmartContentGenerator()
    asyncio.run(generator.enhance_all_websites())