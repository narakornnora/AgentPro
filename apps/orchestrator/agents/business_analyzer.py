"""
üéØ Business Type Analyzer - ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à
"""
import json
from typing import Dict, List, Any

class BusinessTypeAnalyzer:
    def __init__(self):
        self.business_profiles = {
            "coffee_shop": {
                "name": "Coffee Shop / Cafe",
                "target_audience": ["‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô/‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤", "‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡∏Ñ‡∏π‡πà‡∏£‡∏±‡∏Å", "‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô"],
                "key_features": {
                    "essential": ["menu_showcase", "location_info", "opening_hours", "contact_form"],
                    "recommended": ["online_ordering", "loyalty_program", "event_booking", "photo_gallery"],
                    "advanced": ["mobile_app", "chatbot", "delivery_tracking", "pos_integration"]
                },
                "content_focus": {
                    "primary": ["‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡πÅ‡∏ü", "‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏£‡πâ‡∏≤‡∏ô", "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏î‡∏µ", "‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°"],
                    "secondary": ["‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢", "‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û", "‡πÄ‡∏ä‡∏ü/‡∏ö‡∏≤‡∏£‡∏¥‡∏™‡∏ï‡πâ‡∏≤", "‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô"],
                    "storytelling": ["‡∏ï‡πâ‡∏ô‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î‡πÄ‡∏°‡∏•‡πá‡∏î‡∏Å‡∏≤‡πÅ‡∏ü", "‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏±‡πà‡∏ß", "‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á", "‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤"]
                },
                "web_app_features": {
                    "shopping_cart": "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡πÅ‡∏ü‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå",
                    "booking_system": "‡∏à‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞/‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°",
                    "loyalty_program": "‡∏™‡∏∞‡∏™‡∏°‡πÅ‡∏ï‡πâ‡∏° ‡πÅ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•",
                    "chatbot": "‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏°‡∏ô‡∏π ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå"
                }
            },
            
            "restaurant": {
                "name": "Fine Dining Restaurant",
                "target_audience": ["‡∏Ñ‡∏π‡πà‡∏£‡∏±‡∏Å", "‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏∑‡πâ‡∏ß", "‡∏ô‡∏±‡∏Å‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à", "‡∏ô‡∏±‡∏Å‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß"],
                "key_features": {
                    "essential": ["menu_catalog", "chef_profile", "reservation_system", "location_map"],
                    "recommended": ["virtual_tour", "wine_pairing", "private_dining", "event_hosting"],
                    "advanced": ["table_management", "pos_system", "inventory_tracking", "crm_system"]
                },
                "content_focus": {
                    "primary": ["‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏´‡∏≤‡∏£", "‡πÄ‡∏ä‡∏ü‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û", "‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏´‡∏£‡∏π‡∏´‡∏£‡∏≤", "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏©"],
                    "secondary": ["‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°", "‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∏‡∏á", "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏£‡πâ‡∏≤‡∏ô", "‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö"],
                    "storytelling": ["‡∏õ‡∏£‡∏±‡∏ä‡∏ç‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£", "‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à‡πÄ‡∏ä‡∏ü", "‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£", "‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤"]
                },
                "web_app_features": {
                    "reservation_system": "‡∏à‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤ ‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô",
                    "menu_ordering": "‡∏û‡∏£‡∏µ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤",
                    "event_booking": "‡∏à‡∏≠‡∏á‡∏á‡∏≤‡∏ô‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á ‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ",
                    "loyalty_program": "‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å VIP ‡∏û‡∏¥‡πÄ‡∏®‡∏©"
                }
            },
            
            "fashion_boutique": {
                "name": "Fashion Boutique",
                "target_audience": ["‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á‡∏ß‡∏±‡∏¢‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô‡∏ô‡∏¥‡∏™‡∏ï‡πâ‡∏≤", "‡∏ô‡∏±‡∏Å‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á", "‡πÄ‡∏ã‡πÄ‡∏•‡∏ö‡∏£‡∏¥‡∏ï‡∏µ‡πâ"],
                "key_features": {
                    "essential": ["product_showcase", "size_guide", "shopping_cart", "wishlist"],
                    "recommended": ["virtual_try_on", "style_advisor", "personal_shopping", "fashion_blog"],
                    "advanced": ["ar_fitting", "ai_recommendation", "social_commerce", "influencer_program"]
                },
                "content_focus": {
                    "primary": ["‡πÑ‡∏ï‡∏•‡πå‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô", "‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ú‡πâ‡∏≤", "‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå‡πÄ‡∏â‡∏û‡∏≤‡∏∞", "‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î"],
                    "secondary": ["‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå‡∏î‡∏±‡∏á", "‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°", "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß", "‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤"],
                    "storytelling": ["‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå", "‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå", "‡πÑ‡∏•‡∏ü‡πå‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤", "sustainable fashion"]
                },
                "web_app_features": {
                    "shopping_cart": "‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
                    "wishlist": "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö",
                    "size_advisor": "AI ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÑ‡∏ã‡∏™‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°",
                    "style_matching": "‡πÅ‡∏°‡∏ó‡∏ä‡πå‡∏ä‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÑ‡∏≠‡πÄ‡∏ó‡∏°"
                }
            },
            
            "business_corporate": {
                "name": "Corporate Business",
                "target_audience": ["‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£", "‡∏ô‡∏±‡∏Å‡∏•‡∏á‡∏ó‡∏∏‡∏ô", "‡∏û‡∏±‡∏ô‡∏ò‡∏°‡∏¥‡∏ï‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à", "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£"],
                "key_features": {
                    "essential": ["company_profile", "service_portfolio", "contact_system", "testimonials"],
                    "recommended": ["case_studies", "team_profiles", "news_updates", "client_portal"],
                    "advanced": ["crm_integration", "project_management", "analytics_dashboard", "api_services"]
                },
                "content_focus": {
                    "primary": ["‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç", "‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå", "‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÇ‡∏î‡∏î‡πÄ‡∏î‡πà‡∏ô", "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠"],
                    "secondary": ["‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û", "‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ", "‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏°", "‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏™‡∏≤‡∏Å‡∏•"],
                    "storytelling": ["‡∏ß‡∏¥‡∏™‡∏±‡∏¢‡∏ó‡∏±‡∏®‡∏ô‡πå‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó", "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤", "‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï", "‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô"]
                },
                "web_app_features": {
                    "client_portal": "‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå",
                    "quote_system": "‡∏Ç‡∏≠‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå",
                    "project_tracking": "‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤",
                    "support_system": "‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤/‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠"
                }
            },
            
            "ecommerce": {
                "name": "E-commerce Store",
                "target_audience": ["‡∏ô‡∏±‡∏Å‡∏ä‡πâ‡∏≠‡∏õ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå", "‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß", "‡∏ô‡∏±‡∏Å‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à", "‡∏£‡∏µ‡πÄ‡∏ã‡∏•‡πÄ‡∏•‡∏≠‡∏£‡πå"],
                "key_features": {
                    "essential": ["product_catalog", "shopping_cart", "payment_gateway", "order_tracking"],
                    "recommended": ["user_accounts", "review_system", "recommendation_engine", "mobile_app"],
                    "advanced": ["ai_chatbot", "inventory_management", "multi_vendor", "analytics"]
                },
                "content_focus": {
                    "primary": ["‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏î‡∏µ", "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÄ‡∏£‡πá‡∏ß", "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢"],
                    "secondary": ["‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô", "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢", "‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô"],
                    "storytelling": ["‡∏Ñ‡∏±‡∏î‡∏™‡∏£‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û", "‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå", "‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤", "‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°"]
                },
                "web_app_features": {
                    "shopping_cart": "‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ñ‡∏£‡∏ö‡∏ß‡∏á‡∏à‡∏£",
                    "user_registration": "‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
                    "payment_system": "‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á",
                    "chatbot": "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ 24/7"
                }
            }
        }
        
        self.feature_requirements = {
            "shopping_cart": {
                "files": ["cart.html", "cart.js", "cart.css"],
                "database": ["products", "cart_items", "orders"],
                "apis": ["add_to_cart", "update_cart", "checkout"],
                "dependencies": ["payment_gateway", "inventory_system"]
            },
            "chatbot": {
                "files": ["chatbot.html", "chatbot.js", "chatbot.css"],
                "database": ["conversations", "faq", "responses"],
                "apis": ["send_message", "get_response", "save_conversation"],
                "dependencies": ["ai_service", "websocket"]
            },
            "user_registration": {
                "files": ["register.html", "login.html", "profile.html", "auth.js"],
                "database": ["users", "sessions", "user_preferences"],
                "apis": ["register", "login", "logout", "profile_update"],
                "dependencies": ["authentication", "session_management"]
            },
            "booking_system": {
                "files": ["booking.html", "calendar.js", "booking.css"],
                "database": ["bookings", "availability", "customers"],
                "apis": ["check_availability", "make_booking", "cancel_booking"],
                "dependencies": ["calendar_system", "notification_system"]
            }
        }
    
    def analyze_business_needs(self, business_type: str, complexity_level: str = "medium") -> Dict[str, Any]:
        """‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à"""
        if business_type not in self.business_profiles:
            business_type = "business_corporate"  # default
            
        profile = self.business_profiles[business_type]
        
        # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î features ‡∏ï‡∏≤‡∏° complexity level
        features = profile["key_features"]["essential"].copy()
        
        if complexity_level in ["medium", "high"]:
            features.extend(profile["key_features"]["recommended"])
        
        if complexity_level == "high":
            features.extend(profile["key_features"]["advanced"])
        
        return {
            "business_profile": profile,
            "required_features": features,
            "web_app_features": profile["web_app_features"],
            "content_strategy": profile["content_focus"],
            "target_audience": profile["target_audience"],
            "complexity_level": complexity_level
        }
    
    def get_feature_specifications(self, features: List[str]) -> Dict[str, Any]:
        """‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á features ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£"""
        specifications = {}
        
        for feature in features:
            if feature in self.feature_requirements:
                specifications[feature] = self.feature_requirements[feature]
            else:
                # ‡∏™‡∏£‡πâ‡∏≤‡∏á spec ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö feature ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
                specifications[feature] = {
                    "files": [f"{feature}.html", f"{feature}.js", f"{feature}.css"],
                    "database": [f"{feature}_data"],
                    "apis": [f"get_{feature}", f"update_{feature}"],
                    "dependencies": ["basic_framework"]
                }
        
        return specifications
    
    def generate_project_structure(self, business_type: str, complexity_level: str = "medium") -> Dict[str, Any]:
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à"""
        analysis = self.analyze_business_needs(business_type, complexity_level)
        feature_specs = self.get_feature_specifications(analysis["required_features"])
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á file structure
        file_structure = {
            "html_files": ["index.html", "about.html", "contact.html"],
            "css_files": ["style.css", "responsive.css"],
            "js_files": ["main.js", "utils.js"],
            "database_files": ["database.db"],
            "api_files": ["api.py", "routes.py"],
            "assets": ["images/", "fonts/", "icons/"]
        }
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏° files ‡∏à‡∏≤‡∏Å features
        for feature, spec in feature_specs.items():
            file_structure["html_files"].extend(spec.get("files", []))
            if "database" in spec:
                file_structure["database_files"].extend([f"{db}.db" for db in spec["database"]])
            if "apis" in spec:
                file_structure["api_files"].extend([f"{api}.py" for api in spec["apis"]])
        
        return {
            "business_analysis": analysis,
            "feature_specifications": feature_specs,
            "file_structure": file_structure,
            "estimated_files": sum(len(files) for files in file_structure.values() if isinstance(files, list)),
            "development_priority": self._get_development_priority(analysis["required_features"])
        }
    
    def _get_development_priority(self, features: List[str]) -> List[str]:
        """‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤"""
        priority_map = {
            "menu_showcase": 1,
            "product_showcase": 1,
            "company_profile": 1,
            "shopping_cart": 2,
            "booking_system": 2,
            "user_registration": 2,
            "chatbot": 3,
            "payment_system": 3,
            "analytics": 4
        }
        
        # ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
        prioritized = sorted(features, key=lambda x: priority_map.get(x, 5))
        return prioritized

# ‡∏™‡∏£‡πâ‡∏≤‡∏á instance
business_analyzer = BusinessTypeAnalyzer()

if __name__ == "__main__":
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
    for business_type in ["coffee_shop", "restaurant", "fashion_boutique", "business_corporate"]:
        print(f"\nüè¢ {business_type.replace('_', ' ').title()}")
        print("=" * 50)
        
        analysis = business_analyzer.generate_project_structure(business_type, "high")
        print(f"üìä Features: {len(analysis['business_analysis']['required_features'])}")
        print(f"üìÅ Files: {analysis['estimated_files']}")
        print(f"üéØ Target: {', '.join(analysis['business_analysis']['target_audience'][:2])}")
        print(f"‚ö° Web Apps: {', '.join(analysis['business_analysis']['web_app_features'].keys())}")