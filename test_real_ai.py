#!/usr/bin/env python
# ‡∏ó‡∏î‡∏™‡∏≠‡∏ö AI Code Generator ‡πÉ‡∏´‡∏°‡πà

import requests
import json
import time

def test_ai_mobile_generation():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö AI ‡∏™‡∏£‡πâ‡∏≤‡∏á mobile app ‡∏à‡∏£‡∏¥‡∏á ‡πÜ"""
    
    print("üöÄ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö AI Mobile App Generation...")
    
    try:
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö health check ‡∏Å‡πà‡∏≠‡∏ô
        health_response = requests.get('http://localhost:8001/health', timeout=5)
        print(f"Health Check: {health_response.status_code}")
        
        if health_response.status_code == 200:
            health_data = health_response.json()
            print(f"‚úÖ Backend: {health_data['message']}")
        
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á mobile app
        print("\nü§ñ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡πÉ‡∏´‡πâ AI ‡∏™‡∏£‡πâ‡∏≤‡∏á mobile app...")
        
        response = requests.post('http://localhost:8001/generate',
            headers={'Content-Type': 'application/json'},
            json={
                "prompt": "‡∏™‡∏£‡πâ‡∏≤‡∏á app ‡∏£‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡πÅ‡∏ü‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå ‡∏ä‡∏∑‡πà‡∏≠ 'Coffee Paradise' ‡∏°‡∏µ ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏≤‡πÅ‡∏ü ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏• ‡∏Ñ‡∏£‡∏µ‡∏°",
                "app_type": "mobile",
                "framework": "react_native"
            },
            timeout=60  # ‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡∏•‡∏≤ AI ‡∏ô‡∏≤‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢
        )
        
        print(f"Response Status: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            
            print(f"\nüì± AI Response:")
            print(f"Success: {result.get('success')}")
            print(f"Message: {result.get('message')}")
            print(f"Files Created: {result.get('files_created')}")
            print(f"App Path: {result.get('app_path')}")
            print(f"App URL: {result.get('app_url')}")
            
            if result.get('code_preview'):
                print(f"\nüìù Code Preview:")
                print("-" * 50)
                print(result['code_preview'])
                print("-" * 50)
            
            if result.get('success') and result.get('files_created', 0) > 0:
                print("\nüéâ AI ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
                
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á
                import os
                app_path = result.get('app_path')
                if app_path and os.path.exists(app_path):
                    files = os.listdir(app_path)
                    print(f"üìÅ ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á: {files}")
                    
                    # ‡∏≠‡πà‡∏≤‡∏ô App.tsx ‡∏î‡∏π‡∏ß‡πà‡∏≤ AI ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏≠‡∏∞‡πÑ‡∏£
                    app_tsx = os.path.join(app_path, 'App.tsx')
                    if os.path.exists(app_tsx):
                        with open(app_tsx, 'r', encoding='utf-8') as f:
                            content = f.read()
                        
                        print(f"\nüì± App.tsx Content (first 800 chars):")
                        print("=" * 60)
                        print(content[:800] + "..." if len(content) > 800 else content)
                        print("=" * 60)
                        
                        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡πÅ‡∏ü
                        coffee_keywords = ['‡∏Å‡∏≤‡πÅ‡∏ü', 'coffee', 'Coffee', 'Paradise', '‡πÄ‡∏°‡∏ô‡∏π', '‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤', '‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô']
                        found_keywords = [kw for kw in coffee_keywords if kw in content]
                        
                        if found_keywords:
                            print(f"\n‚úÖ AI Customized Content Found: {found_keywords}")
                            print("üéØ CONFIRMED: AI ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡∏ï‡∏≤‡∏° requirements ‡∏à‡∏£‡∏¥‡∏á ‡πÜ!")
                            return True
                        else:
                            print("\n‚ö†Ô∏è No specific coffee-related content found")
                            return False
                    else:
                        print("‚ùå App.tsx not found")
                        return False
                else:
                    print("‚ùå App directory not found")
                    return False
            else:
                print(f"\n‚ùå AI Generation Failed: {result.get('error')}")
                return False
        else:
            print(f"‚ùå API Error: {response.status_code}")
            print(f"Response: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå Exception: {e}")
        return False

def test_ai_web_generation():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö AI ‡∏™‡∏£‡πâ‡∏≤‡∏á web app ‡∏à‡∏£‡∏¥‡∏á ‡πÜ"""
    
    print("\nüåê ‡∏ó‡∏î‡∏™‡∏≠‡∏ö AI Web App Generation...")
    
    try:
        response = requests.post('http://localhost:8001/generate',
            headers={'Content-Type': 'application/json'},
            json={
                "prompt": "‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå ‡∏ä‡∏∑‡πà‡∏≠ 'Fashion Store' ‡∏°‡∏µ gallery ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ shopping cart ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å",
                "app_type": "web",
                "framework": "react"
            },
            timeout=60
        )
        
        print(f"Web Response Status: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            
            print(f"\nüåê Web AI Response:")
            print(f"Success: {result.get('success')}")
            print(f"Message: {result.get('message')}")
            print(f"App URL: {result.get('app_url')}")
            
            if result.get('success'):
                print("‚úÖ AI ‡∏™‡∏£‡πâ‡∏≤‡∏á Web App ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
                return True
            else:
                print(f"‚ùå Web Generation Failed: {result.get('error')}")
                return False
        else:
            print(f"‚ùå Web API Error: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Web Exception: {e}")
        return False

if __name__ == "__main__":
    print("üß™ Testing AI Code Generator")
    print("=" * 60)
    
    # ‡∏£‡∏≠ backend ‡πÄ‡∏£‡∏¥‡πà‡∏°
    time.sleep(3)
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö mobile generation
    mobile_success = test_ai_mobile_generation()
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö web generation
    web_success = test_ai_web_generation()
    
    print("\n" + "=" * 60)
    print("üìä FINAL RESULTS:")
    print(f"Mobile App: {'‚úÖ PASS' if mobile_success else '‚ùå FAIL'}")
    print(f"Web App: {'‚úÖ PASS' if web_success else '‚ùå FAIL'}")
    
    if mobile_success or web_success:
        print("\nüéâ AI ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á ‡πÜ!")
        print("‚úÖ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà mockup - ‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô")
    else:
        print("\n‚ùå ‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡πà‡∏≠")